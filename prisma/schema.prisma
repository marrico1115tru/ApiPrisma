generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model TipoSitio {
  id            Int     @id @default(autoincrement())
  nombre        String  @db.VarChar(100)
  sitios        Sitio[]
  fechaInicial  DateTime @default(now())
  fechaFinal    DateTime @default(now())

  @@map("tipo_sitio")
}

model Sitio {
  id           Int        @id @default(autoincrement())
  nombre       String     @db.VarChar(100)
  ubicacion    String     @db.VarChar(150)
  tipoSitioId  Int
  tipoSitio    TipoSitio  @relation(fields: [tipoSitioId], references: [id])
  areas        Area[]
  fechaInicial DateTime   @default(now())
  fechaFinal   DateTime   @default(now())
  activo       Boolean    @default(true)

  @@map("sitio")
}

model CentroFormacion {
  id            Int        @id @default(autoincrement())
  nombre        String     @db.VarChar(100)
  ubicacion     String     @db.VarChar(150)
  telefono      String     @db.VarChar(50)
  email         String     @db.VarChar(100)
  createdAt     DateTime   @default(now())
  Sede          Sede[]
  areas         Area[]
  municipios    Municipio[]
  fechaInicial  DateTime   @default(now())
  fechaFinal    DateTime   @default(now())

  @@map("centro_formacion")
}

model Municipio {
  id                  Int              @id @default(autoincrement())
  nombre              String           @db.VarChar(100)
  departamento        String           @db.VarChar(100)
  centroFormacionId   Int
  centroFormacion     CentroFormacion  @relation(fields: [centroFormacionId], references: [id])
  fechaInicial        DateTime         @default(now())
  fechaFinal          DateTime         @default(now())

  @@map("municipios")
}

model Area {
  id                  Int              @id @default(autoincrement())
  nombre              String           @db.VarChar(100)
  centroFormacionId   Int
  sitioId             Int
  centroFormacion     CentroFormacion  @relation(fields: [centroFormacionId], references: [id])
  sitio               Sitio            @relation(fields: [sitioId], references: [id])
  sedes               Sede[]
  usuarios            Usuario[]
  productos           Producto[]
  fechaInicial        DateTime         @default(now())
  fechaFinal          DateTime         @default(now())

  @@map("areas")
}

model Sede {
  id            Int              @id @default(autoincrement())
  nombre        String           @db.VarChar(100)
  ubicacion     String           @db.VarChar(150)
  areaId        Int
  area          Area             @relation(fields: [areaId], references: [id])
  centroId      Int
  centro        CentroFormacion  @relation(fields: [centroId], references: [id])
  fechaInicial  DateTime         @default(now())
  fechaFinal    DateTime         @default(now())

  @@map("sedes")
}

model Titulado {
  id              Int              @id @default(autoincrement())
  nombre          String           @db.VarChar(100)
  fichasFormacion FichaFormacion[]
  fechaInicial    DateTime         @default(now())
  fechaFinal      DateTime         @default(now())

  @@map("titulados")
}

model FichaFormacion {
  id            Int              @id @default(autoincrement())
  nombre        String           @db.VarChar(100)
  tituloId      Int
  titulo        Titulado         @relation(fields: [tituloId], references: [id])
  usuarios      Usuario[]
  fechaInicial  DateTime         @default(now())
  fechaFinal    DateTime         @default(now())

  @@map("fichas_formacion")
}

model Rol {
  id            Int        @id @default(autoincrement())
  nombreRol     String     @db.VarChar(100)
  usuarios      Usuario[]
  accesos       Acceso[]
  fechaInicial  DateTime   @default(now())
  fechaFinal    DateTime   @default(now())

  @@map("roles")
}

model Usuario {
  id                Int                 @id @default(autoincrement())
  nombre            String              @db.VarChar(100)
  apellido          String              @db.VarChar(100)
  cedula            String              @db.VarChar(50)
  telefono          String              @db.VarChar(100)
  email             String              @db.VarChar(100)
  cargo             String              @db.VarChar(100)
  areaId            Int
  fichaId           Int
  rolId             Int
  area              Area                @relation(fields: [areaId], references: [id])
  ficha             FichaFormacion      @relation(fields: [fichaId], references: [id])
  rol               Rol                 @relation(fields: [rolId], references: [id])
  solicitudes       Solicitud[]         @relation("SolicitudesSolicitante")
  entregas          EntregaMaterial[]   @relation("EntregasResponsable")
  historial         HistorialProducto[] 
  fechaInicial      DateTime            @default(now())
  fechaFinal        DateTime            @default(now())

  @@map("usuarios")
}


model Producto {
  id               Int                  @id @default(autoincrement())
  codigoSena       String               @db.VarChar(100)
  unspc            String               @db.VarChar(50)
  nombre           String               @db.VarChar(100)
  descripcion      String?
  cantidad         Int
  categoria        String               @db.VarChar(100)
  tipoMateria      String               @db.VarChar(100)
  fechaVencimiento DateTime?
  areaId           Int
  area             Area                 @relation(fields: [areaId], references: [id])
  detalles         DetalleSolicitud[]
  historial        HistorialProducto[]
  fechaInicial     DateTime             @default(now())
  fechaFinal       DateTime             @default(now())

  @@map("productos")
}

model HistorialProducto {
  id           Int        @id @default(autoincrement())
  productoId   Int
  usuarioId    Int
  cantidad     Int
  fechaUso     DateTime   @default(now())
  producto     Producto   @relation(fields: [productoId], references: [id])
  usuario      Usuario    @relation(fields: [usuarioId], references: [id])

  @@map("historial_productos")
}


model Solicitud {
  id                   Int                @id @default(autoincrement())
  usuarioSolicitanteId Int
  fechaSolicitud       DateTime
  estadoSolicitud      String             @db.VarChar(50)
  usuarioSolicitante   Usuario            @relation("SolicitudesSolicitante", fields: [usuarioSolicitanteId], references: [id])
  detalles             DetalleSolicitud[]
  entregas             EntregaMaterial[]
  fechaInicial         DateTime @default(now())
  fechaFinal           DateTime @default(now())

  @@map("solicitudes")
}

model DetalleSolicitud {
  id                 Int        @id @default(autoincrement())
  solicitudId        Int
  productoId         Int
  cantidadSolicitada Int
  observaciones      String?
  solicitud          Solicitud  @relation(fields: [solicitudId], references: [id])
  producto           Producto   @relation(fields: [productoId], references: [id])
  fechaInicial       DateTime @default(now())
  fechaFinal         DateTime @default(now())

  @@map("detalle_solicitud")
}

model EntregaMaterial {
  id                   Int      @id @default(autoincrement())
  solicitudId          Int
  usuarioResponsableId Int
  fechaEntrega         DateTime
  observaciones        String?
  solicitud            Solicitud @relation(fields: [solicitudId], references: [id])
  usuarioResponsable   Usuario   @relation("EntregasResponsable", fields: [usuarioResponsableId], references: [id])
  fechaInicial         DateTime @default(now())
  fechaFinal           DateTime @default(now())

  @@map("entrega_material")
}

model Opcion {
  id            Int      @id @default(autoincrement())
  nombre        String   @db.VarChar(100)
  accesos       Acceso[]
  fechaInicial  DateTime @default(now())
  fechaFinal    DateTime @default(now())

  @@map("opciones")
}

model Acceso {
  id            Int    @id @default(autoincrement())
  opcionId      Int
  rolId         Int
  opcion        Opcion @relation(fields: [opcionId], references: [id])
  rol           Rol    @relation(fields: [rolId], references: [id])
  fechaInicial  DateTime @default(now())
  fechaFinal    DateTime @default(now())

  @@map("accesos")
}
